<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
       
       <!-- 引入配置文件 -->
      <context:property-placeholder location="classpath:db.properties"/>
      
      <!-- 配置数据源 -->
      <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      	   <property name="driverClass" value="${jdbc.driverClass}"/>
      	   <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
      	   <property name="user" value="${jdbc.user}"/>
      	   <property name="password" value="${jdbc.password}"/>
      </bean>
      
      <!-- 配置session工厂 -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	   <property name="dataSource" ref="datasource"></property>
      	    <!-- 加载mybatis.cfg.xml文件 -->
      	   <property name="configLocation" value="classpath:mybatis.cfg.xml"></property>
      	   <!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
      	   <property name="typeAliasesPackage" value="com.app.entity"></property>
      </bean>
      
      <!-- 自动扫描所有的Mapper接口与文件 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.app.mapper"></property>
     </bean>
     
       <!-- 配置事务管理器 -->
     <bean id="txManager"
         class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
         <property name="dataSource" ref="datasource"></property>
     </bean>
     
     <!-- 定义个通知，指定事务管理器 -->
     <tx:advice id="txAdvice" transaction-manager="txManager">
         <tx:attributes>
             <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                 rollback-for="java.lang.Exception" />
             <tx:method name="save*" propagation="REQUIRED" read-only="false"
                 rollback-for="java.lang.Exception" />
             <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                 rollback-for="java.lang.Exception" />
             <tx:method name="update*" propagation="REQUIRED" read-only="false"
                 rollback-for="java.lang.Exception" />
             <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="search*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
         </tx:attributes>
     </tx:advice>
     
     <aop:config>
         <!-- 配置一个切入点 -->
         <aop:pointcut id="serviceMethods" expression="execution(* com.app.service..*(..))" />
         <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
     </aop:config>
     
</beans>